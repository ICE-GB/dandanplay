name: Build and Compress Go Application

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            ext: ""
            out: "bin/main"
            sed-flag: ""
            upx-flag: ""
          - os: windows-latest
            ext: ".exe"
            out: "bin/main"
            sed-flag: ""
            upx-flag: ""
          - os: macos-latest
            ext: ""
            out: "bin/dandanplay"
            sed-flag: "''"
            upx-flag: "--force-macos"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Install UPX on Linux
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y upx-ucl

    - name: Install UPX on Windows
      if: matrix.os == 'windows-latest'
      run: choco install upx

    - name: Install UPX on MacOS
      if: matrix.os == 'macos-latest'
      run: brew install upx

    - name: Build the application
      shell: bash
      run: |
        sed -i ${{ matrix.sed-flag }} 's/AppId\s*=\s*".*"/AppId = "${{ secrets.AppId }}"/' main.go
        sed -i ${{ matrix.sed-flag }} 's/AppSecret\s*=\s*".*"/AppSecret = "${{ secrets.AppSecret }}"/' main.go
        go build -ldflags="-s -w" -o ${{ matrix.out }} main.go
        rm -f main.go

    - name: Compress with UPX
      if: matrix.os != 'macos-latest'
      run: upx ${{ matrix.upx-flag }} --best --lzma -o bin/dandanplay${{ matrix.ext }} ${{ matrix.out }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dandanplay-${{ matrix.os }}${{ matrix.ext }}
        path: bin/dandanplay${{ matrix.ext }}
